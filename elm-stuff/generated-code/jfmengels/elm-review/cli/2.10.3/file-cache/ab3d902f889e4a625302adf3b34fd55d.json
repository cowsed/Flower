[1,[[1,1,1,38,[0,[[1,8,1,24,["ExpressionParser"]],[1,25,1,38,[0,[1,35,1,37]]]]]],[[3,1,3,120,[[3,8,3,16,["Language"]],[0],[1,[3,17,3,120,[1,[[3,27,3,44,[3,["ASTExpression",[1,[3,40,3,44]]]]],[3,46,3,61,[2,"ASTFunctionCall"]],[3,63,3,71,[3,["Name",[1,[3,67,3,71]]]]],[3,73,3,83,[1,"precedence"]],[3,85,3,99,[1,"stringify_name"]],[3,101,3,119,[1,"stringify_infix_op"]]]]]]]],[4,1,4,59,[[4,8,4,13,["Lexer"]],[0],[1,[4,14,4,59,[1,[[4,24,4,37,[3,["TokenType",[1,[4,33,4,37]]]]],[4,39,4,58,[1,"infix_op_from_token"]]]]]]]],[5,1,5,34,[[5,8,5,20,["ParserCommon"]],[0],[1,[5,21,5,34,[0,[5,31,5,33]]]]]],[6,1,6,12,[[6,8,6,12,["Util"]],[0],[0]]]],[[9,1,10,58,[1,[[0],[9,12,9,28,"FuncCallExprTodo"],[],[10,5,10,58,[6,[10,5,10,46,[1,[10,5,10,11,[[],"Result"]],[[10,12,10,30,[1,[10,12,10,30,[[],"FuncCallParseError"]],[]]],[10,31,10,46,[1,[10,31,10,46,[[],"ASTFunctionCall"]],[]]]]]],[10,50,10,58,[1,[10,50,10,58,[[],"ParseRes"]],[]]]]]]]],[12,1,27,90,[0,[[0],[1,[12,1,12,47,[[12,1,12,21,"stringify_expression"],[12,24,12,47,[6,[12,24,12,37,[1,[12,24,12,37,[[],"ASTExpression"]],[]]],[12,41,12,47,[1,[12,41,12,47,[[],"String"]],[]]]]]]]],[13,1,27,90,[[13,1,13,21,"stringify_expression"],[[13,22,13,26,[11,"expr"]]],[14,5,27,90,[17,[[14,10,14,14,[2,[],"expr"]],[[[15,9,15,21,[12,[[],"NameLookup"],[[15,20,15,21,[11,"n"]]]]],[16,13,16,29,[0,[[16,13,16,27,[2,[],"stringify_name"]],[16,28,16,29,[2,[],"n"]]]]]],[[18,9,18,28,[12,[[],"FunctionCallExpr"],[[18,26,18,28,[11,"fc"]]]]],[19,13,19,116,[1,"++",1,[19,13,19,36,[0,[[19,13,19,27,[2,[],"stringify_name"]],[19,28,19,36,[19,[19,28,19,30,[2,[],"fc"]],[19,31,19,36,"fname"]]]]]],[19,40,19,116,[1,"++",1,[19,40,19,43,[5,"("]],[19,47,19,116,[1,"++",1,[19,47,19,109,[7,[19,48,19,108,[1,"|>",0,[19,48,19,88,[1,"|>",0,[19,48,19,55,[19,[19,48,19,50,[2,[],"fc"]],[19,51,19,55,"args"]]],[19,59,19,88,[0,[[19,59,19,67,[2,["List"],"map"]],[19,68,19,88,[2,[],"stringify_expression"]]]]]]],[19,92,19,108,[0,[[19,92,19,103,[2,["String"],"join"]],[19,104,19,108,[5,", "]]]]]]]]],[19,113,19,116,[5,")"]]]]]]]]],[[21,9,21,24,[12,[[],"LiteralExpr"],[[21,21,21,22,[0]],[21,23,21,24,[11,"s"]]]]],[22,13,22,14,[2,[],"s"]]],[[24,9,24,24,[12,[[],"Parenthesized"],[[24,23,24,24,[11,"e"]]]]],[25,13,25,35,[0,[[25,13,25,33,[2,[],"stringify_expression"]],[25,34,25,35,[2,[],"e"]]]]]],[[26,9,26,29,[12,[[],"InfixExpr"],[[26,19,26,22,[11,"lhs"]],[26,23,26,26,[11,"rhs"]],[26,27,26,29,[11,"op"]]]]],[27,13,27,90,[1,"++",1,[27,13,27,37,[0,[[27,13,27,33,[2,[],"stringify_expression"]],[27,34,27,37,[2,[],"lhs"]]]]],[27,41,27,90,[1,"++",1,[27,41,27,62,[0,[[27,41,27,59,[2,[],"stringify_infix_op"]],[27,60,27,62,[2,[],"op"]]]]],[27,66,27,90,[0,[[27,66,27,86,[2,[],"stringify_expression"]],[27,87,27,90,[2,[],"rhs"]]]]]]]]]]]]]]]]]]],[30,1,56,66,[0,[[0],[1,[30,1,30,89,[[30,1,30,27,"parse_expr_check_for_infix"],[30,30,30,89,[6,[30,30,30,43,[1,[30,30,30,43,[[],"ASTExpression"]],[]]],[30,47,30,89,[6,[30,47,30,64,[1,[30,47,30,64,[[],"ExprParseWhatTodo"]],[]]],[30,68,30,89,[6,[30,68,30,77,[1,[30,68,30,77,[[],"ParseStep"]],[]]],[30,81,30,89,[1,[30,81,30,89,[[],"ParseRes"]],[]]]]]]]]]]]],[31,1,56,66,[[31,1,31,27,"parse_expr_check_for_infix"],[[31,28,31,31,[11,"lhs"]],[31,32,31,42,[11,"outer_todo"]],[31,43,31,45,[11,"ps"]]],[32,5,56,66,[17,[[32,10,32,36,[0,[[32,10,32,29,[2,[],"infix_op_from_token"]],[32,30,32,36,[19,[32,30,32,32,[2,[],"ps"]],[32,33,32,36,"tok"]]]]]],[[[33,9,33,16,[12,[[],"Nothing"],[]]],[34,13,34,59,[0,[[34,13,34,34,[2,[],"reapply_token_or_fail"]],[34,35,34,56,[7,[34,36,34,55,[0,[[34,36,34,46,[2,[],"outer_todo"]],[34,47,34,55,[7,[34,48,34,54,[0,[[34,48,34,50,[2,[],"Ok"]],[34,51,34,54,[2,[],"lhs"]]]]]]]]]]]],[34,57,34,59,[2,[],"ps"]]]]]],[[36,9,36,16,[12,[[],"Just"],[[36,14,36,16,[11,"op"]]]]],[37,13,56,66,[16,[[[38,17,54,80,[0,[[0],[1,[38,17,38,52,[[38,17,38,32,"expr_after_todo"],[38,35,38,52,[1,[38,35,38,52,[[],"ExprParseWhatTodo"]],[]]]]]],[39,17,54,80,[[39,17,39,32,"expr_after_todo"],[[39,33,39,36,[11,"res"]]],[40,21,54,80,[17,[[40,26,40,29,[2,[],"res"]],[[[41,25,41,30,[12,[[],"Err"],[[41,29,41,30,[0]]]]],[42,29,42,43,[0,[[42,29,42,39,[2,[],"outer_todo"]],[42,40,42,43,[2,[],"res"]]]]]],[[44,25,44,36,[12,[[],"Ok"],[[44,28,44,36,[11,"this_rhs"]]]]],[45,29,54,80,[17,[[45,34,45,42,[2,[],"this_rhs"]],[[[46,33,46,68,[12,[[],"InfixExpr"],[[46,43,46,51,[11,"next_lhs"]],[46,52,46,60,[11,"next_rhs"]],[46,61,46,68,[11,"next_op"]]]]],[47,37,51,114,[11,[47,40,47,75,[1,">=",2,[47,40,47,58,[0,[[47,40,47,50,[2,[],"precedence"]],[47,51,47,58,[2,[],"next_op"]]]]],[47,62,47,75,[0,[[47,62,47,72,[2,[],"precedence"]],[47,73,47,75,[2,[],"op"]]]]]]],[48,41,48,85,[1,"|>",0,[48,41,48,71,[0,[[48,41,48,43,[2,[],"Ok"]],[48,44,48,71,[7,[48,45,48,70,[0,[[48,45,48,54,[2,[],"InfixExpr"]],[48,55,48,58,[2,[],"lhs"]],[48,59,48,67,[2,[],"this_rhs"]],[48,68,48,70,[2,[],"op"]]]]]]]]]],[48,75,48,85,[2,[],"outer_todo"]]]],[51,41,51,114,[1,"|>",0,[51,41,51,100,[0,[[51,41,51,43,[2,[],"Ok"]],[51,44,51,100,[7,[51,45,51,99,[0,[[51,45,51,54,[2,[],"InfixExpr"]],[51,55,51,82,[7,[51,56,51,81,[0,[[51,56,51,65,[2,[],"InfixExpr"]],[51,66,51,69,[2,[],"lhs"]],[51,70,51,78,[2,[],"next_lhs"]],[51,79,51,81,[2,[],"op"]]]]]]],[51,83,51,91,[2,[],"next_rhs"]],[51,92,51,99,[2,[],"next_op"]]]]]]]]]],[51,104,51,114,[2,[],"outer_todo"]]]]]]],[[53,33,53,34,[0]],[54,37,54,80,[0,[[54,37,54,47,[2,[],"outer_todo"]],[54,48,54,80,[7,[54,49,54,79,[0,[[54,49,54,51,[2,[],"Ok"]],[54,52,54,79,[7,[54,53,54,78,[0,[[54,53,54,62,[2,[],"InfixExpr"]],[54,63,54,66,[2,[],"lhs"]],[54,67,54,75,[2,[],"this_rhs"]],[54,76,54,78,[2,[],"op"]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]],[56,13,56,66,[1,"|>",0,[56,13,56,50,[1,"|>",0,[56,13,56,39,[0,[[56,13,56,23,[2,[],"parse_expr"]],[56,24,56,39,[2,[],"expr_after_todo"]]]]],[56,43,56,50,[2,[],"ParseFn"]]]],[56,54,56,66,[0,[[56,54,56,58,[2,[],"Next"]],[56,59,56,66,[19,[56,59,56,61,[2,[],"ps"]],[56,62,56,66,"prog"]]]]]]]]]]]]]]]]]]]]],[60,1,62,46,[0,[[0],[1,[60,1,60,56,[[60,1,60,11,"parse_expr"],[60,14,60,56,[6,[60,14,60,31,[1,[60,14,60,31,[[],"ExprParseWhatTodo"]],[]]],[60,35,60,56,[6,[60,35,60,44,[1,[60,35,60,44,[[],"ParseStep"]],[]]],[60,48,60,56,[1,[60,48,60,56,[[],"ParseRes"]],[]]]]]]]]]],[61,1,62,46,[[61,1,61,11,"parse_expr"],[[61,12,61,16,[11,"todo"]],[61,17,61,19,[11,"ps"]]],[62,5,62,46,[0,[[62,5,62,30,[2,[],"parse_expr_continued_name"]],[62,31,62,38,[2,[],"Nothing"]],[62,39,62,43,[2,[],"todo"]],[62,44,62,46,[2,[],"ps"]]]]]]]]]],[65,1,99,95,[0,[[0],[1,[65,1,65,85,[[65,1,65,26,"parse_expr_continued_name"],[65,29,65,85,[6,[65,29,65,39,[1,[65,29,65,34,[[],"Maybe"]],[[65,35,65,39,[1,[65,35,65,39,[[],"Name"]],[]]]]]],[65,43,65,85,[6,[65,43,65,60,[1,[65,43,65,60,[[],"ExprParseWhatTodo"]],[]]],[65,64,65,85,[6,[65,64,65,73,[1,[65,64,65,73,[[],"ParseStep"]],[]]],[65,77,65,85,[1,[65,77,65,85,[[],"ParseRes"]],[]]]]]]]]]]]],[66,1,99,95,[[66,1,66,26,"parse_expr_continued_name"],[[66,27,66,46,[11,"qualled_name_so_far"]],[66,47,66,57,[11,"outer_todo"]],[66,58,66,60,[11,"ps"]]],[67,5,99,95,[16,[[[68,9,75,87,[0,[[0],[1,[68,9,68,33,[[68,9,68,13,"todo"],[68,16,68,33,[1,[68,16,68,33,[[],"ExprParseWhatTodo"]],[]]]]]],[69,9,75,87,[[69,9,69,13,"todo"],[[69,14,69,17,[11,"res"]]],[70,13,75,87,[17,[[70,18,70,21,[2,[],"res"]],[[[71,17,71,22,[12,[[],"Err"],[[71,21,71,22,[11,"e"]]]]],[72,21,72,46,[0,[[72,21,72,26,[2,[],"Error"]],[72,27,72,46,[7,[72,28,72,45,[0,[[72,28,72,43,[2,[],"FailedExprParse"]],[72,44,72,45,[2,[],"e"]]]]]]]]]]],[[74,17,74,21,[12,[[],"Ok"],[[74,20,74,21,[11,"e"]]]]],[75,21,75,87,[1,"|>",0,[75,21,75,71,[1,"|>",0,[75,21,75,60,[0,[[75,21,75,47,[2,[],"parse_expr_check_for_infix"]],[75,48,75,49,[2,[],"e"]],[75,50,75,60,[2,[],"outer_todo"]]]]],[75,64,75,71,[2,[],"ParseFn"]]]],[75,75,75,87,[0,[[75,75,75,79,[2,[],"Next"]],[75,80,75,87,[19,[75,80,75,82,[2,[],"ps"]],[75,83,75,87,"prog"]]]]]]]]]]]]]]]]]]],[77,5,99,95,[17,[[77,10,77,20,[19,[77,10,77,16,[19,[77,10,77,12,[2,[],"ps"]],[77,13,77,16,"tok"]]],[77,17,77,20,"typ"]]],[[[78,9,78,17,[12,[[],"Symbol"],[[78,16,78,17,[11,"s"]]]]],[79,13,79,118,[0,[[79,13,79,17,[2,[],"Next"]],[79,18,79,25,[19,[79,18,79,20,[2,[],"ps"]],[79,21,79,25,"prog"]]],[79,26,79,118,[7,[79,27,79,117,[0,[[79,27,79,34,[2,[],"ParseFn"]],[79,35,79,117,[7,[79,36,79,116,[0,[[79,36,79,60,[2,[],"parse_expr_name_or_fcall"]],[79,61,79,111,[7,[79,62,79,110,[0,[[79,62,79,88,[2,["Language"],"append_maybe_name"]],[79,89,79,108,[2,[],"qualled_name_so_far"]],[79,109,79,110,[2,[],"s"]]]]]]],[79,112,79,116,[2,[],"todo"]]]]]]]]]]]]]]]],[[81,9,81,21,[12,[[],"Literal"],[[81,17,81,19,[11,"lt"]],[81,20,81,21,[11,"s"]]]]],[82,13,82,43,[1,"|>",0,[82,13,82,35,[1,"|>",0,[82,13,82,29,[0,[[82,13,82,24,[2,[],"LiteralExpr"]],[82,25,82,27,[2,[],"lt"]],[82,28,82,29,[2,[],"s"]]]]],[82,33,82,35,[2,[],"Ok"]]]],[82,39,82,43,[2,[],"todo"]]]]],[[84,9,84,18,[12,[[],"OpenParen"],[]]],[85,13,90,91,[16,[[[86,17,88,218,[0,[[0],[1,[86,17,86,42,[[86,17,86,22,"after"],[86,25,86,42,[1,[86,25,86,42,[[],"ExprParseWhatTodo"]],[]]]]]],[87,17,88,218,[[87,17,87,22,"after"],[[87,23,87,26,[11,"res"]]],[88,21,88,218,[1,"|>",0,[88,21,88,202,[1,"|>",0,[88,21,88,191,[1,"|>",0,[88,21,88,79,[1,"|>",0,[88,21,88,71,[1,"|>",0,[88,21,88,24,[2,[],"res"]],[88,28,88,71,[0,[[88,28,88,42,[2,["Result"],"andThen"]],[88,43,88,71,[7,[88,44,88,70,[18,[[[88,45,88,46,[11,"e"]]],[88,50,88,70,[0,[[88,50,88,52,[2,[],"Ok"]],[88,53,88,70,[7,[88,54,88,69,[0,[[88,54,88,67,[2,[],"Parenthesized"]],[88,68,88,69,[2,[],"e"]]]]]]]]]]]]]]]]]]]],[88,75,88,79,[2,[],"todo"]]]],[88,83,88,191,[0,[[88,83,88,103,[2,[],"parse_expected_token"]],[88,104,88,180,[7,[88,105,88,179,[1,"++",1,[88,105,88,143,[5,"Expected a closing ) to match this\n"]],[88,147,88,179,[0,[[88,147,88,168,[2,["Util"],"show_source_view"]],[88,169,88,179,[19,[88,169,88,175,[19,[88,169,88,171,[2,[],"ps"]],[88,172,88,175,"tok"]]],[88,176,88,179,"loc"]]]]]]]]]],[88,181,88,191,[2,[],"CloseParen"]]]]]]],[88,195,88,202,[2,[],"ParseFn"]]]],[88,206,88,218,[0,[[88,206,88,210,[2,[],"Next"]],[88,211,88,218,[19,[88,211,88,213,[2,[],"ps"]],[88,214,88,218,"prog"]]]]]]]]]]]]]],[90,13,90,91,[1,"|>",0,[90,13,90,75,[1,"|>",0,[90,13,90,64,[0,[[90,13,90,38,[2,[],"parse_expr_continued_name"]],[90,39,90,58,[2,[],"qualled_name_so_far"]],[90,59,90,64,[2,[],"after"]]]]],[90,68,90,75,[2,[],"ParseFn"]]]],[90,79,90,91,[0,[[90,79,90,83,[2,[],"Next"]],[90,84,90,91,[19,[90,84,90,86,[2,[],"ps"]],[90,87,90,91,"prog"]]]]]]]]]]]],[[92,9,92,21,[12,[[],"NewlineToken"],[]]],[93,13,93,101,[1,"|>",0,[93,13,93,93,[1,"|>",0,[93,13,93,86,[0,[[93,13,93,20,[2,[],"IdkExpr"]],[93,21,93,31,[19,[93,21,93,27,[19,[93,21,93,23,[2,[],"ps"]],[93,24,93,27,"tok"]]],[93,28,93,31,"loc"]]],[93,32,93,86,[5,"I Expected an expression but got the end of the line"]]]]],[93,90,93,93,[2,[],"Err"]]]],[93,97,93,101,[2,[],"todo"]]]]],[[95,9,95,19,[12,[[],"CloseParen"],[]]],[96,13,96,61,[1,"|>",0,[96,13,96,53,[1,"|>",0,[96,13,96,46,[0,[[96,13,96,35,[2,[],"ParenWhereIDidntWantIt"]],[96,36,96,46,[19,[96,36,96,42,[19,[96,36,96,38,[2,[],"ps"]],[96,39,96,42,"tok"]]],[96,43,96,46,"loc"]]]]]],[96,50,96,53,[2,[],"Err"]]]],[96,57,96,61,[2,[],"todo"]]]]],[[98,9,98,10,[0]],[99,13,99,95,[1,"|>",0,[99,13,99,87,[1,"|>",0,[99,13,99,80,[0,[[99,13,99,20,[2,[],"IdkExpr"]],[99,21,99,31,[19,[99,21,99,27,[19,[99,21,99,23,[2,[],"ps"]],[99,24,99,27,"tok"]]],[99,28,99,31,"loc"]]],[99,32,99,80,[5,"I don't know how to parse non name lookup expr"]]]]],[99,84,99,87,[2,[],"Err"]]]],[99,91,99,95,[2,[],"todo"]]]]]]]]]]]]]]]]],[102,1,130,58,[0,[[0],[1,[102,1,102,78,[[102,1,102,25,"parse_expr_name_or_fcall"],[102,28,102,78,[6,[102,28,102,32,[1,[102,28,102,32,[[],"Name"]],[]]],[102,36,102,78,[6,[102,36,102,53,[1,[102,36,102,53,[[],"ExprParseWhatTodo"]],[]]],[102,57,102,78,[6,[102,57,102,66,[1,[102,57,102,66,[[],"ParseStep"]],[]]],[102,70,102,78,[1,[102,70,102,78,[[],"ParseRes"]],[]]]]]]]]]]]],[103,1,130,58,[[103,1,103,25,"parse_expr_name_or_fcall"],[[103,26,103,30,[11,"name"]],[103,31,103,35,[11,"todo"]],[103,36,103,38,[11,"ps"]]],[104,5,130,58,[16,[[[105,9,112,50,[0,[[0],[1,[105,9,105,37,[[105,9,105,18,"func_todo"],[105,21,105,37,[1,[105,21,105,37,[[],"FuncCallExprTodo"]],[]]]]]],[106,9,112,50,[[106,9,106,18,"func_todo"],[[106,19,106,22,[11,"res"]]],[107,13,112,50,[17,[[107,18,107,21,[2,[],"res"]],[[[108,17,108,25,[12,[[],"Ok"],[[108,20,108,25,[11,"fcall"]]]]],[109,21,109,57,[1,"|>",0,[109,21,109,49,[1,"|>",0,[109,21,109,43,[0,[[109,21,109,37,[2,[],"FunctionCallExpr"]],[109,38,109,43,[2,[],"fcall"]]]]],[109,47,109,49,[2,[],"Ok"]]]],[109,53,109,57,[2,[],"todo"]]]]],[[111,17,111,22,[12,[[],"Err"],[[111,21,111,22,[11,"e"]]]]],[112,21,112,50,[0,[[112,21,112,26,[2,[],"Error"]],[112,27,112,50,[7,[112,28,112,49,[0,[[112,28,112,47,[2,[],"FailedFuncCallParse"]],[112,48,112,49,[2,[],"e"]]]]]]]]]]]]]]]]]]]]],[114,5,130,58,[17,[[114,10,114,20,[19,[114,10,114,16,[19,[114,10,114,12,[2,[],"ps"]],[114,13,114,16,"tok"]]],[114,17,114,20,"typ"]]],[[[116,9,116,18,[12,[[],"OpenParen"],[]]],[117,13,117,74,[1,"|>",0,[117,13,117,58,[1,"|>",0,[117,13,117,47,[0,[[117,13,117,32,[2,[],"parse_function_call"]],[117,33,117,37,[2,[],"name"]],[117,38,117,47,[2,[],"func_todo"]]]]],[117,51,117,58,[2,[],"ParseFn"]]]],[117,62,117,74,[0,[[117,62,117,66,[2,[],"Next"]],[117,67,117,74,[19,[117,67,117,69,[2,[],"ps"]],[117,70,117,74,"prog"]]]]]]]]],[[120,9,120,17,[12,[[],"DotToken"],[]]],[121,13,121,82,[1,"|>",0,[121,13,121,66,[1,"|>",0,[121,13,121,55,[0,[[121,13,121,38,[2,[],"parse_expr_continued_name"]],[121,39,121,50,[7,[121,40,121,49,[0,[[121,40,121,44,[2,[],"Just"]],[121,45,121,49,[2,[],"name"]]]]]]],[121,51,121,55,[2,[],"todo"]]]]],[121,59,121,66,[2,[],"ParseFn"]]]],[121,70,121,82,[0,[[121,70,121,74,[2,[],"Next"]],[121,75,121,82,[19,[121,75,121,77,[2,[],"ps"]],[121,78,121,82,"prog"]]]]]]]]],[[124,9,124,10,[0]],[125,13,130,58,[17,[[125,18,125,47,[1,"|>",0,[125,18,125,39,[1,"|>",0,[125,18,125,33,[0,[[125,18,125,28,[2,[],"NameLookup"]],[125,29,125,33,[2,[],"name"]]]]],[125,37,125,39,[2,[],"Ok"]]]],[125,43,125,47,[2,[],"todo"]]]],[[[126,17,126,24,[12,[[],"Error"],[[126,23,126,24,[11,"e"]]]]],[127,21,127,28,[0,[[127,21,127,26,[2,[],"Error"]],[127,27,127,28,[2,[],"e"]]]]]],[[129,17,129,29,[12,[[],"Next"],[[129,22,129,26,[11,"prog"]],[129,27,129,29,[11,"fn"]]]]],[130,21,130,58,[0,[[130,21,130,34,[2,[],"reapply_token"]],[130,35,130,37,[2,[],"fn"]],[130,38,130,58,[21,[130,40,130,42,"ps"],[[130,45,130,57,[[130,45,130,49,"prog"],[130,52,130,56,[2,[],"prog"]]]]]]]]]]]]]]]]]]]]]]]]]]]],[133,1,150,63,[0,[[0],[1,[133,1,133,72,[[133,1,133,20,"parse_function_call"],[133,23,133,72,[6,[133,23,133,27,[1,[133,23,133,27,[[],"Name"]],[]]],[133,31,133,72,[6,[133,31,133,47,[1,[133,31,133,47,[[],"FuncCallExprTodo"]],[]]],[133,51,133,72,[6,[133,51,133,60,[1,[133,51,133,60,[[],"ParseStep"]],[]]],[133,64,133,72,[1,[133,64,133,72,[[],"ParseRes"]],[]]]]]]]]]]]],[134,1,150,63,[[134,1,134,20,"parse_function_call"],[[134,21,134,25,[11,"name"]],[134,26,134,30,[11,"todo"]],[134,31,134,33,[11,"ps"]]],[135,5,150,63,[16,[[[136,9,143,116,[0,[[0],[1,[136,9,136,39,[[136,9,136,19,"what_to_do"],[136,22,136,39,[1,[136,22,136,39,[[],"ExprParseWhatTodo"]],[]]]]]],[137,9,143,116,[[137,9,137,19,"what_to_do"],[[137,20,137,23,[11,"res"]]],[138,13,143,116,[17,[[138,18,138,21,[2,[],"res"]],[[[139,17,139,22,[12,[[],"Err"],[[139,21,139,22,[11,"e"]]]]],[140,21,140,46,[0,[[140,21,140,26,[2,[],"Error"]],[140,27,140,46,[7,[140,28,140,45,[0,[[140,28,140,43,[2,[],"FailedExprParse"]],[140,44,140,45,[2,[],"e"]]]]]]]]]]],[[142,17,142,24,[12,[[],"Ok"],[[142,20,142,24,[11,"expr"]]]]],[143,21,143,116,[1,"|>",0,[143,21,143,100,[1,"|>",0,[143,21,143,89,[0,[[143,21,143,52,[2,[],"parse_func_call_continue_or_end"]],[143,53,143,57,[2,[],"todo"]],[143,58,143,89,[7,[143,59,143,88,[0,[[143,59,143,74,[2,[],"ASTFunctionCall"]],[143,75,143,79,[2,[],"name"]],[143,80,143,88,[9,[[143,82,143,86,[2,[],"expr"]]]]]]]]]]]]],[143,93,143,100,[2,[],"ParseFn"]]]],[143,104,143,116,[0,[[143,104,143,108,[2,[],"Next"]],[143,109,143,116,[19,[143,109,143,111,[2,[],"ps"]],[143,112,143,116,"prog"]]]]]]]]]]]]]]]]]]],[145,5,150,63,[17,[[145,10,145,20,[19,[145,10,145,16,[19,[145,10,145,12,[2,[],"ps"]],[145,13,145,16,"tok"]]],[145,17,145,20,"typ"]]],[[[146,9,146,19,[12,[[],"CloseParen"],[]]],[147,13,147,48,[0,[[147,13,147,17,[2,[],"todo"]],[147,18,147,48,[7,[147,19,147,47,[0,[[147,19,147,21,[2,[],"Ok"]],[147,22,147,47,[7,[147,23,147,46,[0,[[147,23,147,38,[2,[],"ASTFunctionCall"]],[147,39,147,43,[2,[],"name"]],[147,44,147,46,[9,[]]]]]]]]]]]]]]]]],[[149,9,149,10,[0]],[150,13,150,63,[0,[[150,13,150,26,[2,[],"reapply_token"]],[150,27,150,60,[7,[150,28,150,59,[0,[[150,28,150,35,[2,[],"ParseFn"]],[150,36,150,59,[7,[150,37,150,58,[0,[[150,37,150,47,[2,[],"parse_expr"]],[150,48,150,58,[2,[],"what_to_do"]]]]]]]]]]]],[150,61,150,63,[2,[],"ps"]]]]]]]]]]]]]]]]]],[153,1,184,116,[0,[[0],[1,[153,1,153,134,[[153,1,153,32,"parse_func_call_continue_or_end"],[153,35,153,134,[6,[153,35,153,90,[6,[153,36,153,77,[1,[153,36,153,42,[[],"Result"]],[[153,43,153,61,[1,[153,43,153,61,[[],"FuncCallParseError"]],[]]],[153,62,153,77,[1,[153,62,153,77,[[],"ASTFunctionCall"]],[]]]]]],[153,81,153,89,[1,[153,81,153,89,[[],"ParseRes"]],[]]]]],[153,94,153,134,[6,[153,94,153,109,[1,[153,94,153,109,[[],"ASTFunctionCall"]],[]]],[153,113,153,134,[6,[153,113,153,122,[1,[153,113,153,122,[[],"ParseStep"]],[]]],[153,126,153,134,[1,[153,126,153,134,[[],"ParseRes"]],[]]]]]]]]]]]],[154,1,184,116,[[154,1,154,32,"parse_func_call_continue_or_end"],[[154,33,154,37,[11,"todo"]],[154,38,154,43,[11,"fcall"]],[154,44,154,46,[11,"ps"]]],[155,5,184,116,[16,[[[156,9,174,40,[0,[[0],[1,[156,9,156,79,[[156,9,156,29,"what_to_do_with_expr"],[156,32,156,79,[6,[156,32,156,67,[1,[156,32,156,38,[[],"Result"]],[[156,39,156,53,[1,[156,39,156,53,[[],"ExprParseError"]],[]]],[156,54,156,67,[1,[156,54,156,67,[[],"ASTExpression"]],[]]]]]],[156,71,156,79,[1,[156,71,156,79,[[],"ParseRes"]],[]]]]]]]],[157,9,174,40,[[157,9,157,29,"what_to_do_with_expr"],[[157,30,157,33,[11,"res"]]],[158,13,174,40,[17,[[158,18,158,21,[2,[],"res"]],[[[159,17,159,22,[12,[[],"Err"],[[159,21,159,22,[11,"e"]]]]],[160,21,166,54,[17,[[160,26,160,27,[2,[],"e"]],[[[161,25,161,49,[12,[[],"ParenWhereIDidntWantIt"],[[161,48,161,49,[0]]]]],[162,29,162,93,[0,[[162,29,162,34,[2,[],"Error"]],[162,35,162,93,[7,[162,36,162,92,[0,[[162,36,162,55,[2,[],"FailedFuncCallParse"]],[162,56,162,92,[7,[162,57,162,91,[0,[[162,57,162,80,[2,[],"ExpectedAnotherArgument"]],[162,81,162,91,[19,[162,81,162,87,[19,[162,81,162,83,[2,[],"ps"]],[162,84,162,87,"tok"]]],[162,88,162,91,"loc"]]]]]]]]]]]]]]]]],[[165,25,165,26,[0]],[166,29,166,54,[0,[[166,29,166,34,[2,[],"Error"]],[166,35,166,54,[7,[166,36,166,53,[0,[[166,36,166,51,[2,[],"FailedExprParse"]],[166,52,166,53,[2,[],"e"]]]]]]]]]]]]]]]],[[168,17,168,24,[12,[[],"Ok"],[[168,20,168,24,[11,"expr"]]]]],[169,21,174,40,[1,"|>",0,[169,21,173,26,[0,[[169,21,169,28,[2,[],"ParseFn"]],[170,25,173,26,[7,[170,26,172,79,[0,[[170,26,170,57,[2,[],"parse_func_call_continue_or_end"]],[171,29,171,33,[2,[],"todo"]],[172,29,172,79,[21,[172,31,172,36,"fcall"],[[172,39,172,78,[[172,39,172,43,"args"],[172,46,172,77,[0,[[172,46,172,57,[2,["List"],"append"]],[172,58,172,68,[19,[172,58,172,63,[2,[],"fcall"]],[172,64,172,68,"args"]]],[172,69,172,77,[9,[[172,71,172,75,[2,[],"expr"]]]]]]]]]]]]]]]]]]]]],[174,28,174,40,[0,[[174,28,174,32,[2,[],"Next"]],[174,33,174,40,[19,[174,33,174,35,[2,[],"ps"]],[174,36,174,40,"prog"]]]]]]]]]]]]]]]]]]],[176,5,184,116,[17,[[176,10,176,20,[19,[176,10,176,16,[19,[176,10,176,12,[2,[],"ps"]],[176,13,176,16,"tok"]]],[176,17,176,20,"typ"]]],[[[177,9,177,19,[12,[[],"CommaToken"],[]]],[178,13,178,71,[1,"|>",0,[178,13,178,55,[1,"|>",0,[178,13,178,44,[0,[[178,13,178,23,[2,[],"parse_expr"]],[178,24,178,44,[2,[],"what_to_do_with_expr"]]]]],[178,48,178,55,[2,[],"ParseFn"]]]],[178,59,178,71,[0,[[178,59,178,63,[2,[],"Next"]],[178,64,178,71,[19,[178,64,178,66,[2,[],"ps"]],[178,67,178,71,"prog"]]]]]]]]],[[180,9,180,19,[12,[[],"CloseParen"],[]]],[181,13,181,28,[0,[[181,13,181,17,[2,[],"todo"]],[181,18,181,28,[7,[181,19,181,27,[0,[[181,19,181,21,[2,[],"Ok"]],[181,22,181,27,[2,[],"fcall"]]]]]]]]]]],[[183,9,183,10,[0]],[184,13,184,116,[0,[[184,13,184,18,[2,[],"Error"]],[184,19,184,116,[7,[184,20,184,115,[0,[[184,20,184,33,[2,[],"Unimplemented"]],[184,34,184,41,[19,[184,34,184,36,[2,[],"ps"]],[184,37,184,41,"prog"]]],[184,42,184,115,[5,"What to do if not comma or ) in arg list (in func_call_continue_or_end)"]]]]]]]]]]]]]]]]]]]]]]]],[[115,9,115,22,"-- start func"],[119,9,119,33,"--continue building name"],[123,9,123,27,"-- was just a name"],[164,25,164,87,"-- use this tok.loc because were looking at a paren right here"],[188,1,188,22,"-- called after name("]]]]